
Kops Installation
------------------

curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
chmod +x kops-linux-amd64
sudo mv kops-linux-amd64 /usr/local/bin/kops

kops version


Kubectl Installation
--------------------

curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.12.0/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl

kubectl version



aws configure
aws iam list-users
export AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id)
export AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_access_key)
export AWS_ACCESS_KEY_ID= <AWS_ACCESS_KEY_ID>
export AWS_SECRET_ACCESS_KEY= <AWS_SECRET_ACCESS_KEY>


Create k8s Cluster Installation
-------------------------------

export NAME= <ClusterName>.k8s.local
export KOPS_STATE_STORE=s3://<Bucket Name>
aws ec2 describe-availability-zones --region us-east-1
kops create cluster --zones us-east-1a,us-east-1b,us-east-1c,us-east-1d ${NAME}
ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa
kops create secret --name  ${NAME} sshpublickey admin -i ~/.ssh/id_rsa.pub
kops edit cluster ${NAME}
echo $EDITOR
export EDITOR=nano
kops edit ig nodes --name ${NAME}
kops get ig --name ${NAME}
kops edit ig master-us-east-1a --name ${NAME}
kops update cluster ${NAME} --yes  (Create a New Cluster)
kops delete cluster ${NAME} --yes  (Create a Delete Cluster)
kops validate cluster   (Validate Cluster)
kubectl get nodes --show-labels


storage SSD
-----------
kubectl get pvc (PersistentVolumeClaim)
kubectl get pv  (PersistentVolume)


Kubectl Commands
----------------
kubectl get all
kubectl get nodes -o wide 
kubectl describe pod/svc/rc/deployment
kubectl logs -f pod/svc/rc/deployment
kubectl apply -f . (. all yaml files)
kubectl get namespaces
kubectl get namespaces --show-labels
kubectl get pods --all-namespaces (To display pods and namespaces)
kubectl exec -it <Pod> /bin/bash
kubectl get pod <PodName>  -o yaml

















