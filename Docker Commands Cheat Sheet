Docker Installation
----------------------

sudo yum install docker 

sudo service docker start/restart/stop

sudo usermod -a -G docker ec2-user  --Make Docker Not Require sudo Anymore

docker images -a -- List Docker Images on Computer

docker ps -a  -- List Currently Running Docker Containers

docker start <CONTAINER ID HERE> -- Start Docker Container

docker stop <CONTAINER ID HERE> -- Stop Running Docker Container

docker rm $(docker ps -a -q) ---Remove all stopped containers

docker rm <CONTAINER ID HERE> -- Delete Docker Container

docker rmi <IMAGE ID HERE> or docker rmi -f <IMAGE ID HERE> -- Remove Docker Image

docker rmi $(docker images -f dangling=true)  -- Remove All Docker Images on Computer

docker build --tag=<IMAGE TAG NAME> --force-rm=true . -- Build Docker Image

docker run -d <IMAGE NAME> -- Run Docker Image in Docker Container

docker logs <CONTAINER ID HERE> -- Check Docker Container Logs

docker inspect <CONTAINER ID HERE> -- Inspect Docker Container

docker exec -it <CONTAINER ID HERE> ls/bash -- Execute Commands in Docker Container

docker run <CONTAINER ID> -e "<ENVIRONMENT VARIABLE NAME>=<VALUE>" --Pass Environment Variables
EX: docker run ceaf9e1ebef5 -e "SPRING_PROFILES_ACTIVE=dev" -e "server.port=8080"

Publish Docker Image to Docker Hub
-----------------------------------
docker login --username=<Docker Hub Username>
password:<Docker Hub Password>

docker tag <Image ID> <Docker Hub Username>/<Repository Name>

docker push <Docker Hub Username>/<Repository Name> ((or)) <Repository Name>


docker network ls -- List Docker Networks on Computer

docker network create --driver bridge <NEW NETWORK NAME> -- Create Custom Docker Bridge Network

docker run <CONTAINER ID > --network <NAME OF CREATED NETWORK> --  run Docker container in a newly created custom bridge network




